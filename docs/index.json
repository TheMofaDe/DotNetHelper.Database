{
  "api/DotNetHelper.Database.DataSource.DatabaseAccess-2.html": {
    "href": "api/DotNetHelper.Database.DataSource.DatabaseAccess-2.html",
    "title": "Class DatabaseAccess<C, P> | DotNetHelper.Database",
    "keywords": "Class DatabaseAccess<C, P> Inheritance Object DatabaseAccess<C, P> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.DataSource Assembly : DotNetHelper.Database.dll Syntax public class DatabaseAccess<C, P> where C : class, IDbConnection, IDisposable, new() where P : DbParameter, new() Type Parameters Name Description C P Constructors DatabaseAccess(DataBaseType) Declaration public DatabaseAccess(DataBaseType type) Parameters Type Name Description DotNetHelper.ObjectToSql.Enum.DataBaseType type DatabaseAccess(DataBaseType, String) Declaration public DatabaseAccess(DataBaseType type, string connectionString) Parameters Type Name Description DotNetHelper.ObjectToSql.Enum.DataBaseType type String connectionString DatabaseAccess(DataBaseType, String, TimeSpan) Declaration public DatabaseAccess(DataBaseType type, string connectionString, TimeSpan commandTimeOut) Parameters Type Name Description DotNetHelper.ObjectToSql.Enum.DataBaseType type String connectionString TimeSpan commandTimeOut DatabaseAccess(DataBaseType, String, TimeSpan, TimeSpan) Declaration public DatabaseAccess(DataBaseType type, string connectionString, TimeSpan commandTimeOut, TimeSpan connectionTimeOut) Parameters Type Name Description DotNetHelper.ObjectToSql.Enum.DataBaseType type String connectionString TimeSpan commandTimeOut TimeSpan connectionTimeOut Properties CommandTimeOut Declaration public TimeSpan CommandTimeOut { get; set; } Property Value Type Description TimeSpan ConnectionTimeOut Declaration public TimeSpan ConnectionTimeOut { get; set; } Property Value Type Description TimeSpan ObjectToSql Declaration public ObjectToSql ObjectToSql { get; } Property Value Type Description DotNetHelper.ObjectToSql.Services.ObjectToSql SqlSyntaxHelper Declaration public SqlSyntaxHelper SqlSyntaxHelper { get; } Property Value Type Description DotNetHelper.ObjectToSql.Helper.SqlSyntaxHelper Methods CanConnect() Declaration public bool CanConnect() Returns Type Description Boolean Execute<T>(T, ActionType) Declaration public int Execute<T>(T instance, ActionType actionType) where T : class Parameters Type Name Description T instance DotNetHelper.ObjectToSql.Enum.ActionType actionType Returns Type Description Int32 Type Parameters Name Description T Execute<T>(T, ActionType, IColumnSerializer, IColumnSerializer, IColumnSerializer) Declaration public int Execute<T>(T instance, ActionType actionType, IColumnSerializer xmlSerializer, IColumnSerializer jsonSerializer, IColumnSerializer csvSerializer) where T : class Parameters Type Name Description T instance DotNetHelper.ObjectToSql.Enum.ActionType actionType IColumnSerializer xmlSerializer IColumnSerializer jsonSerializer IColumnSerializer csvSerializer Returns Type Description Int32 Type Parameters Name Description T ExecuteAndGetOutput<T>(T, ActionType, IColumnSerializer, IColumnSerializer, IColumnSerializer, Expression<Func<T, Object>>[]) Declaration public T ExecuteAndGetOutput<T>(T instance, ActionType actionType, IColumnSerializer xmlSerializer, IColumnSerializer jsonSerializer, IColumnSerializer csvSerializer, params Expression<Func<T, object>>[] outputFields) where T : class Parameters Type Name Description T instance DotNetHelper.ObjectToSql.Enum.ActionType actionType IColumnSerializer xmlSerializer IColumnSerializer jsonSerializer IColumnSerializer csvSerializer Expression < Func <T, Object >>[] outputFields Returns Type Description T Type Parameters Name Description T ExecuteAndGetOutput<T>(T, ActionType, Expression<Func<T, Object>>[]) Declaration public T ExecuteAndGetOutput<T>(T instance, ActionType actionType, params Expression<Func<T, object>>[] outputFields) where T : class Parameters Type Name Description T instance DotNetHelper.ObjectToSql.Enum.ActionType actionType Expression < Func <T, Object >>[] outputFields Returns Type Description T Type Parameters Name Description T ExecuteNonQuery(String, CommandType, IEnumerable<IDataParameter>) Execute an SQL Command and returns the number of rows affected Declaration public int ExecuteNonQuery(string sql, CommandType commandType, IEnumerable<IDataParameter> parameters = null) Parameters Type Name Description String sql CommandType commandType IEnumerable < IDataParameter > parameters Returns Type Description Int32 ExecuteScalar(String, CommandType, List<DbParameter>) Executes the sql and return the 1st column of the 1st row as an object Declaration public object ExecuteScalar(string sql, CommandType commandType, List<DbParameter> parameters = null) Parameters Type Name Description String sql CommandType commandType List < DbParameter > parameters Returns Type Description Object ExecuteTransaction(List<String>, Boolean, Boolean) Declaration public int ExecuteTransaction(List<string> sqls, bool rollbackOnException, bool throwException = true) Parameters Type Name Description List < String > sqls Boolean rollbackOnException Boolean throwException Returns Type Description Int32 Get<T>() Declaration public List<T> Get<T>() where T : class Returns Type Description List <T> Type Parameters Name Description T Get<T>(Func<Object, String>, Func<Object, String>, Func<Object, String>) Declaration public List<T> Get<T>(Func<object, string> xmlDeserializer, Func<object, string> jsonDeserializer, Func<object, string> csvDeserializer) where T : class Parameters Type Name Description Func < Object , String > xmlDeserializer Func < Object , String > jsonDeserializer Func < Object , String > csvDeserializer Returns Type Description List <T> Type Parameters Name Description T Get<T>(String, CommandType, List<DbParameter>) Declaration public List<T> Get<T>(string sql, CommandType commandType, List<DbParameter> parameters = null) where T : class Parameters Type Name Description String sql CommandType commandType List < DbParameter > parameters Returns Type Description List <T> Type Parameters Name Description T Get<T>(String, CommandType, Func<Object, String>, Func<Object, String>, Func<Object, String>, List<DbParameter>) Declaration public List<T> Get<T>(string sql, CommandType commandType, Func<object, string> xmlDeserializer, Func<object, string> jsonDeserializer, Func<object, string> csvDeserializer, List<DbParameter> parameters = null) where T : class Parameters Type Name Description String sql CommandType commandType Func < Object , String > xmlDeserializer Func < Object , String > jsonDeserializer Func < Object , String > csvDeserializer List < DbParameter > parameters Returns Type Description List <T> Type Parameters Name Description T GetDataReader(String, CommandType, List<DbParameter>) Declaration public IDataReader GetDataReader(string sql, CommandType commandType, List<DbParameter> parameters = null) Parameters Type Name Description String sql CommandType commandType List < DbParameter > parameters Returns Type Description IDataReader GetDataTable(String) Declaration public DataTable GetDataTable(string selectSql) Parameters Type Name Description String selectSql Returns Type Description DataTable GetDataTable(String, CommandType, List<DbParameter>) Declaration public DataTable GetDataTable(string selectSql, CommandType commandType, List<DbParameter> parameters = null) Parameters Type Name Description String selectSql CommandType commandType List < DbParameter > parameters Returns Type Description DataTable GetDataTableWithSchema(String) Declaration public DataTable GetDataTableWithSchema(string sql) Parameters Type Name Description String sql Returns Type Description DataTable GetDataTableWithSchema(String, CommandType, List<DbParameter>) Declaration public DataTable GetDataTableWithSchema(string sql, CommandType commandType, List<DbParameter> parameters = null) Parameters Type Name Description String sql CommandType commandType List < DbParameter > parameters Returns Type Description DataTable GetNewCommand(IDbConnection, String, CommandType, IEnumerable<IDataParameter>) Declaration public IDbCommand GetNewCommand(IDbConnection connection, string sql, CommandType commandType = CommandType.Text, IEnumerable<IDataParameter> parameters = null) Parameters Type Name Description IDbConnection connection String sql CommandType commandType IEnumerable < IDataParameter > parameters Returns Type Description IDbCommand GetNewCommandAndTransaction(IDbConnection) Declaration public (IDbCommand command, IDbTransaction transaction)GetNewCommandAndTransaction(IDbConnection connection) Parameters Type Name Description IDbConnection connection Returns Type Description ValueTuple < IDbCommand , IDbTransaction > GetNewConnection(Boolean) Declaration public IDbConnection GetNewConnection(bool openConnection) Parameters Type Name Description Boolean openConnection Returns Type Description IDbConnection GetNewParameter(String, Object) Declaration public P GetNewParameter(string parameterName, object value) Parameters Type Name Description String parameterName Object value Returns Type Description P"
  },
  "api/DotNetHelper.Database.EventHandler.SqlExceptionEventArgs.html": {
    "href": "api/DotNetHelper.Database.EventHandler.SqlExceptionEventArgs.html",
    "title": "Class SqlExceptionEventArgs | DotNetHelper.Database",
    "keywords": "Class SqlExceptionEventArgs Inheritance Object EventArgs SqlExceptionEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.EventHandler Assembly : DotNetHelper.Database.dll Syntax public class SqlExceptionEventArgs : EventArgs Constructors SqlExceptionEventArgs(Exception) Declaration public SqlExceptionEventArgs(Exception error) Parameters Type Name Description Exception error SqlExceptionEventArgs(Exception, String) Declaration public SqlExceptionEventArgs(Exception error, string sql) Parameters Type Name Description Exception error String sql Properties Exception Declaration public Exception Exception { get; } Property Value Type Description Exception Sql Declaration public string Sql { get; } Property Value Type Description String"
  },
  "api/DotNetHelper.Database.Extension.DBConnectionExtension.html": {
    "href": "api/DotNetHelper.Database.Extension.DBConnectionExtension.html",
    "title": "Class DBConnectionExtension | DotNetHelper.Database",
    "keywords": "Class DBConnectionExtension Inheritance Object DBConnectionExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.Extension Assembly : DotNetHelper.Database.dll Syntax public static class DBConnectionExtension Methods CloseSafely(IDbConnection) Declaration public static void CloseSafely(this IDbConnection connection) Parameters Type Name Description IDbConnection connection OpenSafely(IDbConnection) Declaration public static void OpenSafely(this IDbConnection connection) Parameters Type Name Description IDbConnection connection"
  },
  "api/DotNetHelper.Database.Extension.ExtDataTable.html": {
    "href": "api/DotNetHelper.Database.Extension.ExtDataTable.html",
    "title": "Class ExtDataTable | DotNetHelper.Database",
    "keywords": "Class ExtDataTable Inheritance Object ExtDataTable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.Extension Assembly : DotNetHelper.Database.dll Syntax public static class ExtDataTable Methods MapTo<T>(DataRow, Boolean) Declaration public static T MapTo<T>(this DataRow row, bool useAttributeName = true) where T : class Parameters Type Name Description DataRow row Boolean useAttributeName Returns Type Description T Type Parameters Name Description T MapToList<T>(DataTable, Boolean) Declaration public static List<T> MapToList<T>(this DataTable dataTable, bool useAttributeName = true) where T : class Parameters Type Name Description DataTable dataTable Boolean useAttributeName Returns Type Description List <T> Type Parameters Name Description T SetColumnPosition(DataTable, String, Int32) SetOrdinal of DataTable columns based on the index of the columnNames array. Removes invalid column names first. Declaration public static bool SetColumnPosition(this DataTable table, string columnName, int position) Parameters Type Name Description DataTable table String columnName Int32 position Returns Type Description Boolean Remarks http://stackoverflow.com/questions/3757997/how-to-change-datatable-colums-order SetColumnsOrder(DataTable, String[]) SetOrdinal of DataTable columns based on the index of the columnNames array. Removes invalid column names first. Declaration public static void SetColumnsOrder(this DataTable table, params string[] columnNames) Parameters Type Name Description DataTable table String [] columnNames Remarks http://stackoverflow.com/questions/3757997/how-to-change-datatable-colums-order"
  },
  "api/DotNetHelper.Database.Models.QueryBucketManager.OnBeforeAddToBucketEventHandler.html": {
    "href": "api/DotNetHelper.Database.Models.QueryBucketManager.OnBeforeAddToBucketEventHandler.html",
    "title": "Delegate QueryBucketManager.OnBeforeAddToBucketEventHandler | DotNetHelper.Database",
    "keywords": "Delegate QueryBucketManager.OnBeforeAddToBucketEventHandler Namespace : DotNetHelper.Database.Models Assembly : DotNetHelper.Database.dll Syntax public delegate void OnBeforeAddToBucketEventHandler(object sender, QueryBucketEventArgs e); Parameters Type Name Description Object sender QueryBucketEventArgs e"
  },
  "api/DotNetHelper.Database.Models.QueryBucketEventArgs.html": {
    "href": "api/DotNetHelper.Database.Models.QueryBucketEventArgs.html",
    "title": "Class QueryBucketEventArgs | DotNetHelper.Database",
    "keywords": "Class QueryBucketEventArgs Inheritance Object EventArgs QueryBucketEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.Models Assembly : DotNetHelper.Database.dll Syntax public class QueryBucketEventArgs : EventArgs Constructors QueryBucketEventArgs(QueryBucket) Declaration public QueryBucketEventArgs(QueryBucket bucket) Parameters Type Name Description QueryBucket bucket Properties QueryBucket Declaration public QueryBucket QueryBucket { get; } Property Value Type Description QueryBucket"
  },
  "api/DotNetHelper.Database.Models.QueryBucket.html": {
    "href": "api/DotNetHelper.Database.Models.QueryBucket.html",
    "title": "Class QueryBucket | DotNetHelper.Database",
    "keywords": "Class QueryBucket Inheritance Object QueryBucket Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.Models Assembly : DotNetHelper.Database.dll Syntax public class QueryBucket Properties ConnectionDisposeTime Declaration public DateTime? ConnectionDisposeTime { get; set; } Property Value Type Description Nullable < DateTime > ConnectionStartTime Declaration public DateTime ConnectionStartTime { get; set; } Property Value Type Description DateTime DatabaseType Declaration public string DatabaseType { get; set; } Property Value Type Description String ExecutedSuccessfully Declaration public bool? ExecutedSuccessfully { get; set; } Property Value Type Description Nullable < Boolean > Query Declaration public string Query { get; set; } Property Value Type Description String ReadableQuery Declaration public string ReadableQuery { get; set; } Property Value Type Description String Server Declaration public string Server { get; set; } Property Value Type Description String"
  },
  "api/DotNetHelper.Database.Extension.ExtDataReader.html": {
    "href": "api/DotNetHelper.Database.Extension.ExtDataReader.html",
    "title": "Class ExtDataReader | DotNetHelper.Database",
    "keywords": "Class ExtDataReader Inheritance Object ExtDataReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.Extension Assembly : DotNetHelper.Database.dll Syntax public static class ExtDataReader Methods GetBytes(IDataReader, Int32) Reads all available bytes from reader Declaration public static byte[] GetBytes(this IDataReader reader, int ordinal) Parameters Type Name Description IDataReader reader Int32 ordinal Returns Type Description Byte [] HasRows(IDataReader) Declaration public static bool? HasRows(this IDataReader reader) Parameters Type Name Description IDataReader reader Returns Type Description Nullable < Boolean > MapTo<T>(IDataReader, Func<Object, String>, Func<Object, String>, Func<Object, String>) Declaration public static T MapTo<T>(this IDataReader reader, Func<object, string> xmlDeserializer, Func<object, string> jsonDeserializer, Func<object, string> csvDeserializer) where T : class Parameters Type Name Description IDataReader reader Func < Object , String > xmlDeserializer Func < Object , String > jsonDeserializer Func < Object , String > csvDeserializer Returns Type Description T Type Parameters Name Description T MapToList<T>(IDataReader, Func<Object, String>, Func<Object, String>, Func<Object, String>) Declaration public static List<T> MapToList<T>(this IDataReader reader, Func<object, string> xmlDeserializer, Func<object, string> jsonDeserializer, Func<object, string> csvDeserializer) where T : class Parameters Type Name Description IDataReader reader Func < Object , String > xmlDeserializer Func < Object , String > jsonDeserializer Func < Object , String > csvDeserializer Returns Type Description List <T> Type Parameters Name Description T"
  },
  "api/DotNetHelper.Database.Models.QueryBucketManager.FullQueryBucketEventHandler.html": {
    "href": "api/DotNetHelper.Database.Models.QueryBucketManager.FullQueryBucketEventHandler.html",
    "title": "Delegate QueryBucketManager.FullQueryBucketEventHandler | DotNetHelper.Database",
    "keywords": "Delegate QueryBucketManager.FullQueryBucketEventHandler Namespace : DotNetHelper.Database.Models Assembly : DotNetHelper.Database.dll Syntax public delegate void FullQueryBucketEventHandler(object sender, FullQueryBucketEventArgs e); Parameters Type Name Description Object sender FullQueryBucketEventArgs e"
  },
  "api/DotNetHelper.Database.EventHandler.html": {
    "href": "api/DotNetHelper.Database.EventHandler.html",
    "title": "Namespace DotNetHelper.Database.EventHandler | DotNetHelper.Database",
    "keywords": "Namespace DotNetHelper.Database.EventHandler Classes SqlExceptionEventArgs"
  },
  "api/DotNetHelper.Database.Extension.IDataParameterExtension.html": {
    "href": "api/DotNetHelper.Database.Extension.IDataParameterExtension.html",
    "title": "Class IDataParameterExtension | DotNetHelper.Database",
    "keywords": "Class IDataParameterExtension Inheritance Object IDataParameterExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.Extension Assembly : DotNetHelper.Database.dll Syntax public static class IDataParameterExtension Methods AddRange<T>(IDataParameterCollection, IEnumerable<T>) Declaration public static void AddRange<T>(this IDataParameterCollection collection, IEnumerable<T> collectionToAdd) Parameters Type Name Description IDataParameterCollection collection IEnumerable <T> collectionToAdd Type Parameters Name Description T"
  },
  "api/DotNetHelper.Database.Models.FullQueryBucketEventArgs.html": {
    "href": "api/DotNetHelper.Database.Models.FullQueryBucketEventArgs.html",
    "title": "Class FullQueryBucketEventArgs | DotNetHelper.Database",
    "keywords": "Class FullQueryBucketEventArgs Inheritance Object EventArgs FullQueryBucketEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.Models Assembly : DotNetHelper.Database.dll Syntax public class FullQueryBucketEventArgs : EventArgs Constructors FullQueryBucketEventArgs(List<QueryBucket>) Declaration public FullQueryBucketEventArgs(List<QueryBucket> buckets) Parameters Type Name Description List < QueryBucket > buckets Properties BucketOfQueries Declaration public List<QueryBucket> BucketOfQueries { get; } Property Value Type Description List < QueryBucket >"
  },
  "api/DotNetHelper.Database.Interface.html": {
    "href": "api/DotNetHelper.Database.Interface.html",
    "title": "Namespace DotNetHelper.Database.Interface | DotNetHelper.Database",
    "keywords": "Namespace DotNetHelper.Database.Interface Interfaces IColumnSerializer"
  },
  "api/DotNetHelper.Database.DataSource.html": {
    "href": "api/DotNetHelper.Database.DataSource.html",
    "title": "Namespace DotNetHelper.Database.DataSource | DotNetHelper.Database",
    "keywords": "Namespace DotNetHelper.Database.DataSource Classes DatabaseAccess<C, P>"
  },
  "api/DotNetHelper.Database.Models.html": {
    "href": "api/DotNetHelper.Database.Models.html",
    "title": "Namespace DotNetHelper.Database.Models | DotNetHelper.Database",
    "keywords": "Namespace DotNetHelper.Database.Models Classes FullQueryBucketEventArgs QueryBucket QueryBucketEventArgs QueryBucketManager Delegates QueryBucketManager.FullQueryBucketEventHandler QueryBucketManager.OnBeforeAddToBucketEventHandler"
  },
  "api/DotNetHelper.Database.Models.QueryBucketManager.html": {
    "href": "api/DotNetHelper.Database.Models.QueryBucketManager.html",
    "title": "Class QueryBucketManager | DotNetHelper.Database",
    "keywords": "Class QueryBucketManager Inheritance Object QueryBucketManager Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.Models Assembly : DotNetHelper.Database.dll Syntax public class QueryBucketManager : IDisposable Constructors QueryBucketManager() Declaration public QueryBucketManager() Properties IncludeReadableQuery Declaration public bool IncludeReadableQuery { get; set; } Property Value Type Description Boolean MaxBucketSize Declaration public int MaxBucketSize { get; set; } Property Value Type Description Int32 Methods AddBucket(QueryBucket) Declaration public void AddBucket(QueryBucket bucket) Parameters Type Name Description QueryBucket bucket Dispose() Declaration public void Dispose() OnBeforeAdd(QueryBucketEventArgs) Declaration protected virtual void OnBeforeAdd(QueryBucketEventArgs e) Parameters Type Name Description QueryBucketEventArgs e OnFullBucket(FullQueryBucketEventArgs) Declaration protected virtual void OnFullBucket(FullQueryBucketEventArgs e) Parameters Type Name Description FullQueryBucketEventArgs e Events BeforeAddToBucket Declaration public event QueryBucketManager.OnBeforeAddToBucketEventHandler BeforeAddToBucket Event Type Type Description QueryBucketManager.OnBeforeAddToBucketEventHandler FullBucketReached Declaration public event QueryBucketManager.FullQueryBucketEventHandler FullBucketReached Event Type Type Description QueryBucketManager.FullQueryBucketEventHandler Implements System.IDisposable"
  },
  "articles/sample.html": {
    "href": "articles/sample.html",
    "title": "Sample Article | DotNetHelper.Database",
    "keywords": "Sample Article This is a example of how to reference an article"
  },
  "api/DotNetHelper.Database.Extension.html": {
    "href": "api/DotNetHelper.Database.Extension.html",
    "title": "Namespace DotNetHelper.Database.Extension | DotNetHelper.Database",
    "keywords": "Namespace DotNetHelper.Database.Extension Classes DBConnectionExtension ExtDataReader ExtDataTable IDataParameterExtension TypeExtension"
  },
  "api/DotNetHelper.Database.Interface.IColumnSerializer.html": {
    "href": "api/DotNetHelper.Database.Interface.IColumnSerializer.html",
    "title": "Interface IColumnSerializer | DotNetHelper.Database",
    "keywords": "Interface IColumnSerializer Namespace : DotNetHelper.Database.Interface Assembly : DotNetHelper.Database.dll Syntax public interface IColumnSerializer Properties Deserialize Declaration Func<object, string> Deserialize { get; } Property Value Type Description Func < Object , String > Serialize Declaration Func<object, string> Serialize { get; } Property Value Type Description Func < Object , String >"
  },
  "api/DotNetHelper.Database.Extension.TypeExtension.html": {
    "href": "api/DotNetHelper.Database.Extension.TypeExtension.html",
    "title": "Class TypeExtension | DotNetHelper.Database",
    "keywords": "Class TypeExtension Inheritance Object TypeExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Database.Extension Assembly : DotNetHelper.Database.dll Syntax public static class TypeExtension Methods IsNullable(Type) Declaration public static (bool isNullableT, Type underlyingType)IsNullable(this Type type) Parameters Type Name Description Type type Returns Type Description ValueTuple < Boolean , Type > IsTypeDynamic(Type) Declaration public static bool IsTypeDynamic(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean"
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper.Database | DotNetHelper.Database",
    "keywords": "DotNetHelper.Database Description How to use // code snippet Targeted .NET Frameworks NET452 NETSTANDARD2.0"
  }
}