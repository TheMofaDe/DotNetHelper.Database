### YamlMime:ManagedReference
items:
- uid: DotNetHelper.Database.Models.QueryBucket
  commentId: T:DotNetHelper.Database.Models.QueryBucket
  id: QueryBucket
  parent: DotNetHelper.Database.Models
  children:
  - DotNetHelper.Database.Models.QueryBucket.ConnectionDisposeTime
  - DotNetHelper.Database.Models.QueryBucket.ConnectionStartTime
  - DotNetHelper.Database.Models.QueryBucket.DatabaseType
  - DotNetHelper.Database.Models.QueryBucket.ExecutedSuccessfully
  - DotNetHelper.Database.Models.QueryBucket.Query
  - DotNetHelper.Database.Models.QueryBucket.ReadableQuery
  - DotNetHelper.Database.Models.QueryBucket.Server
  langs:
  - csharp
  - vb
  name: QueryBucket
  nameWithType: QueryBucket
  fullName: DotNetHelper.Database.Models.QueryBucket
  type: Class
  source:
    remote:
      path: src/DotNetHelper.Database/Models/QueryBucket.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.Database.git
    id: QueryBucket
    path: ../src/DotNetHelper.Database/Models/QueryBucket.cs
    startLine: 4
  assemblies:
  - DotNetHelper.Database
  namespace: DotNetHelper.Database.Models
  syntax:
    content: public class QueryBucket
    content.vb: Public Class QueryBucket
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotNetHelper.Database.Models.QueryBucket.ConnectionStartTime
  commentId: P:DotNetHelper.Database.Models.QueryBucket.ConnectionStartTime
  id: ConnectionStartTime
  parent: DotNetHelper.Database.Models.QueryBucket
  langs:
  - csharp
  - vb
  name: ConnectionStartTime
  nameWithType: QueryBucket.ConnectionStartTime
  fullName: DotNetHelper.Database.Models.QueryBucket.ConnectionStartTime
  type: Property
  source:
    remote:
      path: src/DotNetHelper.Database/Models/QueryBucket.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.Database.git
    id: ConnectionStartTime
    path: ../src/DotNetHelper.Database/Models/QueryBucket.cs
    startLine: 6
  assemblies:
  - DotNetHelper.Database
  namespace: DotNetHelper.Database.Models
  syntax:
    content: public DateTime ConnectionStartTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property ConnectionStartTime As Date
  overload: DotNetHelper.Database.Models.QueryBucket.ConnectionStartTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper.Database.Models.QueryBucket.ConnectionDisposeTime
  commentId: P:DotNetHelper.Database.Models.QueryBucket.ConnectionDisposeTime
  id: ConnectionDisposeTime
  parent: DotNetHelper.Database.Models.QueryBucket
  langs:
  - csharp
  - vb
  name: ConnectionDisposeTime
  nameWithType: QueryBucket.ConnectionDisposeTime
  fullName: DotNetHelper.Database.Models.QueryBucket.ConnectionDisposeTime
  type: Property
  source:
    remote:
      path: src/DotNetHelper.Database/Models/QueryBucket.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.Database.git
    id: ConnectionDisposeTime
    path: ../src/DotNetHelper.Database/Models/QueryBucket.cs
    startLine: 7
  assemblies:
  - DotNetHelper.Database
  namespace: DotNetHelper.Database.Models
  syntax:
    content: public DateTime? ConnectionDisposeTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property ConnectionDisposeTime As Date?
  overload: DotNetHelper.Database.Models.QueryBucket.ConnectionDisposeTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper.Database.Models.QueryBucket.Query
  commentId: P:DotNetHelper.Database.Models.QueryBucket.Query
  id: Query
  parent: DotNetHelper.Database.Models.QueryBucket
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: QueryBucket.Query
  fullName: DotNetHelper.Database.Models.QueryBucket.Query
  type: Property
  source:
    remote:
      path: src/DotNetHelper.Database/Models/QueryBucket.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.Database.git
    id: Query
    path: ../src/DotNetHelper.Database/Models/QueryBucket.cs
    startLine: 8
  assemblies:
  - DotNetHelper.Database
  namespace: DotNetHelper.Database.Models
  syntax:
    content: public string Query { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Query As String
  overload: DotNetHelper.Database.Models.QueryBucket.Query*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper.Database.Models.QueryBucket.ReadableQuery
  commentId: P:DotNetHelper.Database.Models.QueryBucket.ReadableQuery
  id: ReadableQuery
  parent: DotNetHelper.Database.Models.QueryBucket
  langs:
  - csharp
  - vb
  name: ReadableQuery
  nameWithType: QueryBucket.ReadableQuery
  fullName: DotNetHelper.Database.Models.QueryBucket.ReadableQuery
  type: Property
  source:
    remote:
      path: src/DotNetHelper.Database/Models/QueryBucket.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.Database.git
    id: ReadableQuery
    path: ../src/DotNetHelper.Database/Models/QueryBucket.cs
    startLine: 9
  assemblies:
  - DotNetHelper.Database
  namespace: DotNetHelper.Database.Models
  syntax:
    content: public string ReadableQuery { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReadableQuery As String
  overload: DotNetHelper.Database.Models.QueryBucket.ReadableQuery*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper.Database.Models.QueryBucket.Server
  commentId: P:DotNetHelper.Database.Models.QueryBucket.Server
  id: Server
  parent: DotNetHelper.Database.Models.QueryBucket
  langs:
  - csharp
  - vb
  name: Server
  nameWithType: QueryBucket.Server
  fullName: DotNetHelper.Database.Models.QueryBucket.Server
  type: Property
  source:
    remote:
      path: src/DotNetHelper.Database/Models/QueryBucket.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.Database.git
    id: Server
    path: ../src/DotNetHelper.Database/Models/QueryBucket.cs
    startLine: 10
  assemblies:
  - DotNetHelper.Database
  namespace: DotNetHelper.Database.Models
  syntax:
    content: public string Server { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Server As String
  overload: DotNetHelper.Database.Models.QueryBucket.Server*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper.Database.Models.QueryBucket.DatabaseType
  commentId: P:DotNetHelper.Database.Models.QueryBucket.DatabaseType
  id: DatabaseType
  parent: DotNetHelper.Database.Models.QueryBucket
  langs:
  - csharp
  - vb
  name: DatabaseType
  nameWithType: QueryBucket.DatabaseType
  fullName: DotNetHelper.Database.Models.QueryBucket.DatabaseType
  type: Property
  source:
    remote:
      path: src/DotNetHelper.Database/Models/QueryBucket.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.Database.git
    id: DatabaseType
    path: ../src/DotNetHelper.Database/Models/QueryBucket.cs
    startLine: 11
  assemblies:
  - DotNetHelper.Database
  namespace: DotNetHelper.Database.Models
  syntax:
    content: public string DatabaseType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DatabaseType As String
  overload: DotNetHelper.Database.Models.QueryBucket.DatabaseType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper.Database.Models.QueryBucket.ExecutedSuccessfully
  commentId: P:DotNetHelper.Database.Models.QueryBucket.ExecutedSuccessfully
  id: ExecutedSuccessfully
  parent: DotNetHelper.Database.Models.QueryBucket
  langs:
  - csharp
  - vb
  name: ExecutedSuccessfully
  nameWithType: QueryBucket.ExecutedSuccessfully
  fullName: DotNetHelper.Database.Models.QueryBucket.ExecutedSuccessfully
  type: Property
  source:
    remote:
      path: src/DotNetHelper.Database/Models/QueryBucket.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper.Database.git
    id: ExecutedSuccessfully
    path: ../src/DotNetHelper.Database/Models/QueryBucket.cs
    startLine: 12
  assemblies:
  - DotNetHelper.Database
  namespace: DotNetHelper.Database.Models
  syntax:
    content: public bool? ExecutedSuccessfully { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property ExecutedSuccessfully As Boolean?
  overload: DotNetHelper.Database.Models.QueryBucket.ExecutedSuccessfully*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: DotNetHelper.Database.Models
  commentId: N:DotNetHelper.Database.Models
  name: DotNetHelper.Database.Models
  nameWithType: DotNetHelper.Database.Models
  fullName: DotNetHelper.Database.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper.Database.Models.QueryBucket.ConnectionStartTime*
  commentId: Overload:DotNetHelper.Database.Models.QueryBucket.ConnectionStartTime
  name: ConnectionStartTime
  nameWithType: QueryBucket.ConnectionStartTime
  fullName: DotNetHelper.Database.Models.QueryBucket.ConnectionStartTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: DotNetHelper.Database.Models.QueryBucket.ConnectionDisposeTime*
  commentId: Overload:DotNetHelper.Database.Models.QueryBucket.ConnectionDisposeTime
  name: ConnectionDisposeTime
  nameWithType: QueryBucket.ConnectionDisposeTime
  fullName: DotNetHelper.Database.Models.QueryBucket.ConnectionDisposeTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper.Database.Models.QueryBucket.Query*
  commentId: Overload:DotNetHelper.Database.Models.QueryBucket.Query
  name: Query
  nameWithType: QueryBucket.Query
  fullName: DotNetHelper.Database.Models.QueryBucket.Query
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DotNetHelper.Database.Models.QueryBucket.ReadableQuery*
  commentId: Overload:DotNetHelper.Database.Models.QueryBucket.ReadableQuery
  name: ReadableQuery
  nameWithType: QueryBucket.ReadableQuery
  fullName: DotNetHelper.Database.Models.QueryBucket.ReadableQuery
- uid: DotNetHelper.Database.Models.QueryBucket.Server*
  commentId: Overload:DotNetHelper.Database.Models.QueryBucket.Server
  name: Server
  nameWithType: QueryBucket.Server
  fullName: DotNetHelper.Database.Models.QueryBucket.Server
- uid: DotNetHelper.Database.Models.QueryBucket.DatabaseType*
  commentId: Overload:DotNetHelper.Database.Models.QueryBucket.DatabaseType
  name: DatabaseType
  nameWithType: QueryBucket.DatabaseType
  fullName: DotNetHelper.Database.Models.QueryBucket.DatabaseType
- uid: DotNetHelper.Database.Models.QueryBucket.ExecutedSuccessfully*
  commentId: Overload:DotNetHelper.Database.Models.QueryBucket.ExecutedSuccessfully
  name: ExecutedSuccessfully
  nameWithType: QueryBucket.ExecutedSuccessfully
  fullName: DotNetHelper.Database.Models.QueryBucket.ExecutedSuccessfully
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
